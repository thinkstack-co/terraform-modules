##################################
# AWS iam policy - role reading policy
##################################

variable "policy_name" {
  description = "Name of the policy"
  default     = "azure_ad_sso_user_role_policy"
}

variable "policy_description" {
  description = "Description of the policy"
  default     = "This policy will allow to fetch the roles from AWS accounts."
}

##################################
# AWS iam user - role reading user
##################################

variable "user_force_destroy" {
  type        = string
  description = "(Optional, default false) When destroying this user, destroy even if it has non-Terraform-managed IAM access keys, login profile or MFA devices. Without force_destroy a user with non-Terraform-managed access keys and login profile will fail to be destroyed."
  default     = false
}

variable "user_name" {
  type        = string
  description = "(Required) The user's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-_.. User names are not distinguished by case. For example, you cannot create users named both 'TESTUSER' and 'testuser'."
  default     = "azure_ad_role_manager"
}

variable "user_path" {
  type        = string
  description = "(Optional, default '/') Path in which to create the user."
  default     = "/"
}

variable "user_permissions_boundary" {
  type        = string
  description = "(Optional) The ARN of the policy that is used to set the permissions boundary for the user."
  default     = ""
}

variable "pgp_key" {
  type        = string
  description = "(Optional) Either a base-64 encoded PGP public key, or a keybase username in the form keybase:some_person_that_exists."
  default     = "keybase:thinkstack"
}

##################################
# AWS iam saml provider - saml identify provider
##################################

variable "saml_name" {
  type        = string
  description = "(Required) The name of the provider to create."
  default     = "thinkstack_azure_ad"
}

variable "saml_metadata_document" {
  type        = string
  description = "(Required) An XML document generated by an identity provider that supports SAML 2.0."
}

##################################
# AWS iam role - admins role
##################################

variable "role_admins_description" {
  type        = string
  description = "(Optional) The description of the role."
  default     = "ThinkStack Azure AD SSO - Admins role"
}

variable "role_admins_force_detach_policies" {
  type        = string
  description = "(Optional) Specifies to force detaching any policies the role has before destroying it. Defaults to false."
  default     = false
}

variable "role_admins_max_session_duration" {
  type        = string
  description = "(Optional) The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours."
  default     = 7200
}

variable "role_admins_name" {
  type        = string
  description = "(Required) The friendly IAM role name to match."
  default     = "thinkstack_admins"
}

variable "role_admins_permissions_boundary" {
  type        = string
  description = "(Optional) The ARN of the policy that is used to set the permissions boundary for the role."
  default     = ""
}

variable "admin_policy_arn" {
  type        = string
  description = "(Required) - The ARN of the policy you want to apply"
  default     = "arn:aws:iam::aws:policy/AdministratorAccess"
}

##################################
# AWS iam role - sysadmins role
##################################

variable "role_sysadmins_description" {
  type        = string
  description = "(Optional) The description of the role."
  default     = "ThinkStack Azure AD SSO - Sysadmins role"
}

variable "role_sysadmins_force_detach_policies" {
  type        = string
  description = "(Optional) Specifies to force detaching any policies the role has before destroying it. Defaults to false."
  default     = false
}

variable "role_sysadmins_max_session_duration" {
  type        = string
  description = "(Optional) The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours."
  default     = 7200
}

variable "role_sysadmins_name" {
  type        = string
  description = "(Required) The friendly IAM role name to match."
  default     = "thinkstack_sysadmins"
}

variable "role_sysadmins_permissions_boundary" {
  type        = string
  description = "(Optional) The ARN of the policy that is used to set the permissions boundary for the role."
  default     = ""
}

variable "sysadmins_policy_arn" {
  type        = string
  description = "(Required) - The ARN of the policy you want to apply"
  default     = "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
}

##################################
# AWS iam role - admins role
##################################

variable "role_read_only_description" {
  type        = string
  description = "(Optional) The description of the role."
  default     = "ThinkStack Azure AD SSO - Read only role"
}

variable "role_read_only_force_detach_policies" {
  type        = string
  description = "(Optional) Specifies to force detaching any policies the role has before destroying it. Defaults to false."
  default     = false
}

variable "role_read_only_max_session_duration" {
  type        = string
  description = "(Optional) The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours."
  default     = 7200
}

variable "role_read_only_name" {
  type        = string
  description = "(Required) The friendly IAM role name to match."
  default     = "thinkstack_read_only"
}

variable "role_read_only_permissions_boundary" {
  type        = string
  description = "(Optional) The ARN of the policy that is used to set the permissions boundary for the role."
  default     = ""
}

variable "read_only_policy_arn" {
  type        = string
  description = "(Required) - The ARN of the policy you want to apply"
  default     = "arn:aws:iam::aws:policy/ReadOnlyAccess"
}
